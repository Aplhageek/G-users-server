// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//using login to store the username in case sensitive format 
// using username to store the user in case in-sensitive format
model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  githubUsername String
  name           String?
  bio            String?
  location       String?
  blog           String?
  publicRepos    Int
  publicGists    Int
  followers      Int
  following      Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isDeleted      Boolean  @default(false)

  friends  Friend[] @relation("UserFriends")
  friendOf Friend[] @relation("UserIsFriendOf")
}


//the composite key is to avoid a duplicate relationships
model Friend {
  id        Int      @id @default(autoincrement())
  userId    Int
  friendId  Int
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  friend    User     @relation("UserIsFriendOf", fields: [friendId], references: [id])
  createdAt DateTime @default(now())


  @@unique([userId, friendId])  
}
